# REBOL Makefile --  version for Windows with MSYS
#
# NOTE: This Makefile is temporary solution for now. It will be later replaced with multiplatform solution (CMAKE)
#
# To cross compile using a different toolchain and include files:
#    $TOOLS - should point to bin where gcc is found
#    $INCL  - should point to the dir for includes
# Example make:
#    make TOOLS=~/amiga/amiga/bin/ppc-amigaos- INCL=/SDK/newlib/include

TOOLS=/usr/bin/x86_64-w64-mingw32-
INCL=/usr/x86_64-w64-mingw32/include/
LIBPATH=/usr/x86_64-w64-mingw32/lib/

OBJDIR=objs

MAKEFILE = makefile-mingw-64

# For the build toolchain:
CC=	$(TOOLS)gcc
CXX  = $(TOOLS)g++
STRIP=	$(TOOLS)strip

# CP allows different copy progs:
CP=	 cp
# LS allows different ls progs:
#LS=	cmd //C dir
LS=	ls
# UP - some systems do not use ../
UP=	 ..
# CD - some systems do not use ./
CD=	 ./
# Special tools:
T=	$(UP)/src/tools
# Paths used by make:
S=	../src
R=	$S/core

INCL ?= .
I= -I$(INCL) -I$S/include/ -I $S/codecs/

TO_OS?= TO_WIN32
OS_ID?= 0.3.3
BIT= -m64
LIB_PRODUCT_NAME= core #note: this can be overriden by the HOST_PRODUCT_NAME
HOST_PRODUCT_NAME= core
BIN_SUFFIX= .exe
CFLAGS ?= -O2
RAPI_FLAGS= $(CFLAGS) -DUNICODE -D__LLP64__
HOST_CORE_FLAGS= -DREB_CORE -DREB_EXE $(CFLAGS) -DUNICODE -DCUSTOM_STARTUP -D_FILE_OFFSET_BITS=64 -D__LLP64__
HOST_VIEW_FLAGS= -DREB_EXE $(CFLAGS) -DUNICODE -DCUSTOM_STARTUP -D_FILE_OFFSET_BITS=64 -D__LLP64__
ENCAP_CORE_FLAGS= -DENCAP -DEXT_LICENSING -DNOWINIOCTLTYPEDEFS $(HOST_CORE_FLAGS)
ENCAP_VIEW_FLAGS= -DENCAP -DEXT_LICENSING -DNOWINIOCTLTYPEDEFS $(HOST_VIEW_FLAGS)
RLIB_FLAGS=
# Flags for core and for host:
RFLAGS= -c $(BIT) -D$(TO_OS) -DREB_API  $(RAPI_FLAGS) $I
HFLAGS= -c $(BIT) -D$(TO_OS) $(HOST_FLAGS) $I
#-DREB_CORE
#CLIB= -lm  -lwsock32 -lcomdlg32 -lgdi32 -lstdc++ -mwindows -Wl,--stack=4194300
CLIB= -L$(LIBPATH)-L. -static-libgcc -lm -lwsock32 -lcomdlg32 -lgdi32 -liphlpapi -Wl,--stack=4194300
GUI_CLIB= -L$(LIBPATH) -L. -static-libgcc -lm -lwsock32 -lcomdlg32 -lgdi32 -lmsimg32 -liphlpapi -Wl,--stack=4194300 -mwindows -static -lstdc++

UPX= $(CD)upx$(BIN_SUFFIX) --ultra-brute

# REBOL builds various include files:
#REBOL=	$(CD)r3-make$(BIN_SUFFIX) -qs >NUL:
REBOL=	$(CD)r3-make -qs >NUL:

# For running tests, ship, build, etc.
#R3=	$(CD)r3$(BIN_SUFFIX) -qs
R3=	$(CD)r3 -qs

# Refernce to correct R3 libname
R3LIB= r3.dll

### Build targets:
top:
	$(MAKE) -f $(MAKEFILE) r3-core

update:
	-cd $(UP)/; cvs -q update src

make:
	$(REBOL) $T/make-make.r $(OS_ID)

clean:
	@-rm -rf $(R3LIB) r3-core-host$(BIN_SUFFIX) r3-view-host$(BIN_SUFFIX) r3-core$(BIN_SUFFIX) r3-view$(BIN_SUFFIX) encap-view$(BIN_SUFFIX) encap-core$(BIN_SUFFIX) $(OBJDIR)/

all:
	$(MAKE) -f $(MAKEFILE) clean
	$(MAKE) -f $(MAKEFILE) lib
	$(MAKE) -f $(MAKEFILE) r3-core-host HOST_PRODUCT_NAME=saphir-core-host
	$(MAKE) -f $(MAKEFILE) r3-view-host HOST_PRODUCT_NAME=saphir-view-host
	$(MAKE) -f $(MAKEFILE) r3-core HOST_PRODUCT_NAME=saphir-core
	$(MAKE) -f $(MAKEFILE) r3-view HOST_PRODUCT_NAME=saphir-view
	$(MAKE) -f $(MAKEFILE) encap-core HOST_PRODUCT_NAME=saphir-core-encap
	$(MAKE) -f $(MAKEFILE) encap-view HOST_PRODUCT_NAME=saphir-view-encap

prep-lib:
	$(REBOL) $T/make-headers.r
	$(REBOL) $T/make-boot.r $(OS_ID) $(LIB_PRODUCT_NAME)
	$(REBOL) $T/make-os-ext.r # ok, but not always
	$(REBOL) $T/make-reb-lib.r
	#-rm -f $(OBJS)

prep-core: prep-lib
	$(REBOL) $T/saphir-init.r $(HOST_PRODUCT_NAME)
	$(REBOL) $T/core-ext.r
	$(eval HOST_FLAGS =$(HOST_CORE_FLAGS))
	-rm -f $(HOST)

prep-view: prep-lib
	$(REBOL) $T/saphir-init.r $(HOST_PRODUCT_NAME)
	$(REBOL) $T/core-ext.r
	$(REBOL) $T/view-ext.r
	$(eval HOST_FLAGS =$(HOST_VIEW_FLAGS))
	#-rm -f $(HOST)

prep-encap-view:
	$(REBOL) $T/encap-init.r $(HOST_PRODUCT_NAME)
	$(REBOL) $T/core-ext.r
	$(REBOL) $T/licensing-ext.r
	$(REBOL) $T/view-ext.r
	$(eval HOST_FLAGS =$(ENCAP_VIEW_FLAGS))
	-rm -f $(HOST)
	-rm -f $(HOST_ENCAP)

prep-encap-boot-view:
	$(REBOL) $T/encap-boot-init.r $(HOST_PRODUCT_NAME)
	$(REBOL) $T/core-ext.r
	$(REBOL) $T/licensing-ext.r
	$(REBOL) $T/view-ext.r
	$(eval HOST_FLAGS =$(ENCAP_VIEW_FLAGS))
	-rm -f $(HOST)
	-rm -f $(HOST_ENCAP)

prep-encap-core:
	$(REBOL) $T/encap-init.r
	$(REBOL) $T/core-ext.r
	$(REBOL) $T/licensing-ext.r
	$(eval HOST_FLAGS =$(ENCAP_CORE_FLAGS))
	-rm -f $(HOST)
	-rm -f $(HOST_ENCAP)

prep-encap-boot-core:
	$(REBOL) $T/encap-boot-init.r $(HOST_PRODUCT_NAME)
	$(REBOL) $T/core-ext.r
	$(REBOL) $T/licensing-ext.r
	$(eval HOST_FLAGS =$(ENCAP_CORE_FLAGS))
	-rm -f $(HOST)
	-rm -f $(HOST_ENCAP)

### Post build actions
purge:
	-rm $(R3LIB)
	-rm host$(BIN_SUFFIX)
	$(MAKE) -f $(MAKEFILE) lib
	$(MAKE) -f $(MAKEFILE) r3-core-host

test:
	$(CP) r3$(BIN_SUFFIX) $(UP)/src/tests/
	$(R3) $S/tests/test.r

install:
	sudo cp r3$(BIN_SUFFIX) /usr/local/bin

ship:
	$(R3) $S/tools/upload.r

build:	$(R3LIB)
	$(R3) $S/tools/make-build.r

cln:
	rm $(R3LIB) r3.o

check:
	$(STRIP) -s -o r3.s r3$(BIN_SUFFIX)
	$(STRIP) -x -o r3.x r3$(BIN_SUFFIX)
	$(STRIP) -X -o r3.X r3$(BIN_SUFFIX)
	$(LS) r3*

OBJS =	$(OBJDIR)/a-constants.o $(OBJDIR)/a-globals.o $(OBJDIR)/a-lib.o $(OBJDIR)/b-boot.o \
	$(OBJDIR)/b-init.o $(OBJDIR)/c-do.o $(OBJDIR)/c-error.o $(OBJDIR)/c-frame.o \
	$(OBJDIR)/c-function.o $(OBJDIR)/c-port.o $(OBJDIR)/c-task.o $(OBJDIR)/c-word.o \
	$(OBJDIR)/d-crash.o $(OBJDIR)/d-dump.o $(OBJDIR)/d-print.o $(OBJDIR)/f-blocks.o \
	$(OBJDIR)/f-deci.o $(OBJDIR)/f-dtoa.o $(OBJDIR)/f-enbase.o $(OBJDIR)/f-extension.o $(OBJDIR)/f-math.o \
	$(OBJDIR)/f-modify.o $(OBJDIR)/f-qsort.o $(OBJDIR)/f-random.o $(OBJDIR)/f-round.o $(OBJDIR)/f-series.o \
	$(OBJDIR)/f-stubs.o $(OBJDIR)/l-scan.o $(OBJDIR)/l-types.o $(OBJDIR)/m-gc.o \
	$(OBJDIR)/m-pools.o $(OBJDIR)/m-series.o $(OBJDIR)/n-control.o $(OBJDIR)/n-data.o \
	$(OBJDIR)/n-io.o $(OBJDIR)/n-loop.o $(OBJDIR)/n-math.o $(OBJDIR)/n-sets.o \
	$(OBJDIR)/n-strings.o $(OBJDIR)/n-system.o $(OBJDIR)/p-clipboard.o $(OBJDIR)/p-console.o \
	$(OBJDIR)/p-dir.o $(OBJDIR)/p-dns.o $(OBJDIR)/p-event.o $(OBJDIR)/p-file.o \
	$(OBJDIR)/p-net.o $(OBJDIR)/s-cases.o $(OBJDIR)/s-crc.o $(OBJDIR)/s-file.o \
	$(OBJDIR)/s-find.o $(OBJDIR)/s-make.o $(OBJDIR)/s-mold.o $(OBJDIR)/s-ops.o \
	$(OBJDIR)/s-trim.o $(OBJDIR)/s-unicode.o $(OBJDIR)/t-bitset.o $(OBJDIR)/t-block.o \
	$(OBJDIR)/t-char.o $(OBJDIR)/t-datatype.o $(OBJDIR)/t-date.o $(OBJDIR)/t-decimal.o \
	$(OBJDIR)/t-event.o $(OBJDIR)/t-function.o $(OBJDIR)/t-gob.o $(OBJDIR)/t-image.o \
	$(OBJDIR)/t-integer.o $(OBJDIR)/t-logic.o $(OBJDIR)/t-map.o $(OBJDIR)/t-money.o \
	$(OBJDIR)/t-none.o $(OBJDIR)/t-object.o $(OBJDIR)/t-pair.o $(OBJDIR)/t-port.o \
	$(OBJDIR)/t-string.o $(OBJDIR)/t-time.o $(OBJDIR)/t-tuple.o $(OBJDIR)/t-typeset.o \
	$(OBJDIR)/t-utype.o $(OBJDIR)/t-vector.o $(OBJDIR)/t-word.o $(OBJDIR)/u-bmp.o \
	$(OBJDIR)/u-compress.o $(OBJDIR)/u-dialect.o $(OBJDIR)/u-gif.o $(OBJDIR)/u-jpg.o \
	$(OBJDIR)/u-md5.o $(OBJDIR)/u-parse.o $(OBJDIR)/u-png.o $(OBJDIR)/u-sha1.o \
	$(OBJDIR)/u-zlib.o

HOST_ENCAP = $(OBJDIR)/host-licensing.o

HOST =	$(OBJDIR)/host-main.o $(OBJDIR)/host-core.o $(OBJDIR)/host-args.o $(OBJDIR)/host-device.o $(OBJDIR)/host-stdio.o \
	$(OBJDIR)/dev-net.o $(OBJDIR)/dev-dns.o $(OBJDIR)/host-lib.o $(OBJDIR)/dev-stdio.o \
	$(OBJDIR)/dev-file.o $(OBJDIR)/dev-event.o $(OBJDIR)/dev-clipboard.o \
	$(OBJDIR)/lodepng.o $(OBJDIR)/rc4.o $(OBJDIR)/aes.o $(OBJDIR)/bigint.o $(OBJDIR)/rsa.o $(OBJDIR)/dh.o

GFX= \
	$(OBJDIR)/host-view.o\
	$(OBJDIR)/host-window.o\
	$(OBJDIR)/host-graphics.o\
	$(OBJDIR)/host-draw.o\
	$(OBJDIR)/host-draw-api.o\
	$(OBJDIR)/host-text.o\
	$(OBJDIR)/host-text-api.o\
	$(OBJDIR)/host-compositor.o\
	$(OBJDIR)/host-event.o


AGG= \
	$(OBJDIR)/agg_arc.o\
	$(OBJDIR)/agg_arrowhead.o\
	$(OBJDIR)/agg_bezier_arc.o\
	$(OBJDIR)/agg_bspline.o\
	$(OBJDIR)/agg_curves.o\
	$(OBJDIR)/agg_image_filters.o\
	$(OBJDIR)/agg_line_aa_basics.o\
	$(OBJDIR)/agg_path_storage.o\
	$(OBJDIR)/agg_rasterizer_scanline_aa.o\
	$(OBJDIR)/agg_rounded_rect.o\
	$(OBJDIR)/agg_sqrt_tables.o\
	$(OBJDIR)/agg_trans_affine.o\
	$(OBJDIR)/agg_trans_single_path.o\
	$(OBJDIR)/agg_vcgen_bspline.o\
	$(OBJDIR)/agg_vcgen_contour.o\
	$(OBJDIR)/agg_vcgen_dash.o\
	$(OBJDIR)/agg_vcgen_markers_term.o\
	$(OBJDIR)/agg_vcgen_smooth_poly1.o\
	$(OBJDIR)/agg_vcgen_stroke.o\
	$(OBJDIR)/agg_vpgen_segmentator.o\
	$(OBJDIR)/agg_graphics.o\
	$(OBJDIR)/agg_font_win32_tt.o\
	$(OBJDIR)/agg_truetype_text.o\

# Directly linked r3 core executable:
r3-core: prep-core $(OBJDIR) $(OBJS) $(HOST)
	$(CC) -o r3-core$(BIN_SUFFIX) $(BIT) $(OBJS) $(HOST) $(CLIB)
	$(STRIP) r3-core$(BIN_SUFFIX)
	$(LS) r3-core$(BIN_SUFFIX)

# Directly linked r3 core 64bit executable:
r3-core-64: prep-core $(OBJDIR) $(OBJS) $(HOST)
	$(CC) -o r3-core$(BIN_SUFFIX) $(OBJS) $(HOST) $(CLIB)
	$(STRIP) r3-core$(BIN_SUFFIX)
	$(LS) r3-core$(BIN_SUFFIX)

# Lint r3 core
lint-r3-core: prep-core
	lint-nt c:/lint/include.lnt std.lnt -I../src/include -dTO_WIN32 $(wildcard ../src/core/*.c) > lint.out

# Directly linked r3 view executable:
r3-view: prep-view $(OBJDIR) $(OBJS) $(HOST) $(GFX) $(AGG)
	$(CXX) -o r3-view$(BIN_SUFFIX) $(BIT) $(OBJS) $(HOST) $(GFX) $(AGG) $(GUI_CLIB)
	$(STRIP) r3-view$(BIN_SUFFIX)
	$(LS) r3-view$(BIN_SUFFIX)

# r3/view/encap executable:
encap-view: $(OBJDIR)
	$(MAKE) -f $(MAKEFILE) encap-boot-view
	$(MAKE) -f $(MAKEFILE) encap-exe-view

# r3/core/encap executable:
encap-core: $(OBJDIR)
	$(MAKE) -f $(MAKEFILE) encap-boot-core
	$(MAKE) -f $(MAKEFILE) encap-exe-core

encap-exe-view: prep-encap-view $(OBJS) $(HOST_ENCAP) $(HOST) $(GFX) $(AGG)
	$(CXX) -o encap-view$(BIN_SUFFIX) $(BIT) $(OBJS) $(HOST_ENCAP) $(HOST) $(GFX) $(AGG) $(GUI_CLIB)
	$(STRIP) encap-view$(BIN_SUFFIX)
	-rm -f encap-boot.bin encap-boot.r

encap-boot-view: prep-encap-boot-view $(OBJDIR) $(OBJS) $(HOST_ENCAP) $(HOST) $(GFX) $(AGG)
	$(CXX) -o encap-boot.bin $(BIT) $(OBJS) $(HOST_ENCAP) $(HOST) $(GFX) $(AGG) $(GUI_CLIB)
	$(STRIP) encap-boot.bin
	$(UPX) encap-boot.bin

encap-exe-core: prep-encap-core $(OBJS) $(HOST_ENCAP) $(HOST)
	$(CC) -o encap-core$(BIN_SUFFIX) $(BIT) $(OBJS) $(HOST_ENCAP) $(HOST) $(CLIB)
	$(STRIP) encap-core$(BIN_SUFFIX)
	-rm -f encap-boot.bin encap-boot.r

encap-boot-core: prep-encap-boot-core $(OBJDIR) $(OBJS) $(HOST_ENCAP) $(HOST)
	$(CC) -o encap-boot.bin $(BIT) $(OBJS) $(HOST_ENCAP) $(HOST) $(CLIB)
	$(STRIP) encap-boot.bin
	$(UPX) encap-boot.bin

$(OBJDIR):
	mkdir -p $(OBJDIR)

lib:	$(R3LIB)

# PUBLIC: Shared library:
# NOTE: Did not use "-Wl,-soname,libr3.dll" because won't find .dll in local dir.
$(R3LIB): prep-lib $(OBJDIR) $(OBJS)
	$(CC) -o $(R3LIB) $(BIT) -shared $(OBJS) $(CLIB)
	$(STRIP) $(R3LIB)
	$(LS) $(R3LIB)

# PUBLIC: Core Host using the shared lib:

r3-core-host: prep-core $(OBJDIR) $(HOST)
	$(CC) -o r3-core-host$(BIN_SUFFIX) $(BIT) $(HOST) $(R3LIB) $(CLIB)
	$(STRIP) r3-core-host$(BIN_SUFFIX)
	$(LS) r3-core-host$(BIN_SUFFIX)

# PUBLIC: View Host using the shared lib:

r3-view-host: prep-view $(OBJDIR) $(HOST) $(GFX) $(AGG)
	$(CXX) -o r3-view-host$(BIN_SUFFIX) $(BIT) $(HOST) $(GFX) $(R3LIB) $(GUI_CLIB) $(AGG)
	$(STRIP) r3-view-host$(BIN_SUFFIX)
	$(LS) r3-view-host$(BIN_SUFFIX)

### File build targets:
b-boot.c: $(SRC)/boot/boot.r
	$(REBOL) -sqw $(SRC)/tools/make-boot.r

$(OBJDIR)/a-constants.o:   $R/a-constants.c
	$(CC) $R/a-constants.c $(RFLAGS) -o $(OBJDIR)/a-constants.o

$(OBJDIR)/a-globals.o:     $R/a-globals.c
	$(CC) $R/a-globals.c $(RFLAGS) -o $(OBJDIR)/a-globals.o

$(OBJDIR)/a-lib.o:         $R/a-lib.c
	$(CC) $R/a-lib.c $(RFLAGS) -o $(OBJDIR)/a-lib.o

$(OBJDIR)/b-boot.o:        $R/b-boot.c
	$(CC) $R/b-boot.c $(RFLAGS) -o $(OBJDIR)/b-boot.o

$(OBJDIR)/b-init.o:        $R/b-init.c
	$(CC) $R/b-init.c $(RFLAGS) -o $(OBJDIR)/b-init.o

$(OBJDIR)/c-do.o:          $R/c-do.c
	$(CC) $R/c-do.c $(RFLAGS) -o $(OBJDIR)/c-do.o

$(OBJDIR)/c-error.o:       $R/c-error.c
	$(CC) $R/c-error.c $(RFLAGS) -o $(OBJDIR)/c-error.o

$(OBJDIR)/c-frame.o:       $R/c-frame.c
	$(CC) $R/c-frame.c $(RFLAGS) -o $(OBJDIR)/c-frame.o

$(OBJDIR)/c-function.o:    $R/c-function.c
	$(CC) $R/c-function.c $(RFLAGS) -o $(OBJDIR)/c-function.o

$(OBJDIR)/c-port.o:        $R/c-port.c
	$(CC) $R/c-port.c $(RFLAGS) -o $(OBJDIR)/c-port.o

$(OBJDIR)/c-task.o:        $R/c-task.c
	$(CC) $R/c-task.c $(RFLAGS) -o $(OBJDIR)/c-task.o

$(OBJDIR)/c-word.o:        $R/c-word.c
	$(CC) $R/c-word.c $(RFLAGS) -o $(OBJDIR)/c-word.o

$(OBJDIR)/d-crash.o:       $R/d-crash.c
	$(CC) $R/d-crash.c $(RFLAGS) -o $(OBJDIR)/d-crash.o

$(OBJDIR)/d-dump.o:        $R/d-dump.c
	$(CC) $R/d-dump.c $(RFLAGS) -o $(OBJDIR)/d-dump.o

$(OBJDIR)/d-print.o:       $R/d-print.c
	$(CC) $R/d-print.c $(RFLAGS) -o $(OBJDIR)/d-print.o

$(OBJDIR)/f-blocks.o:      $R/f-blocks.c
	$(CC) $R/f-blocks.c $(RFLAGS) -o $(OBJDIR)/f-blocks.o

$(OBJDIR)/f-deci.o:        $R/f-deci.c
	$(CC) $R/f-deci.c $(RFLAGS) -o $(OBJDIR)/f-deci.o

$(OBJDIR)/f-dtoa.o:        $R/f-dtoa.c
	$(CC) $R/f-dtoa.c $(RFLAGS) -o $(OBJDIR)/f-dtoa.o

$(OBJDIR)/f-enbase.o:      $R/f-enbase.c
	$(CC) $R/f-enbase.c $(RFLAGS) -o $(OBJDIR)/f-enbase.o

$(OBJDIR)/f-extension.o:   $R/f-extension.c
	$(CC) $R/f-extension.c $(RFLAGS) -o $(OBJDIR)/f-extension.o

$(OBJDIR)/f-math.o:        $R/f-math.c
	$(CC) $R/f-math.c $(RFLAGS) -o $(OBJDIR)/f-math.o

$(OBJDIR)/f-modify.o:      $R/f-modify.c
	$(CC) $R/f-modify.c $(RFLAGS) -o $(OBJDIR)/f-modify.o

$(OBJDIR)/f-qsort.o:      $R/f-qsort.c
	$(CC) $R/f-qsort.c $(RFLAGS) -o $(OBJDIR)/f-qsort.o

$(OBJDIR)/f-random.o:      $R/f-random.c
	$(CC) $R/f-random.c $(RFLAGS) -o $(OBJDIR)/f-random.o

$(OBJDIR)/f-round.o:       $R/f-round.c
	$(CC) $R/f-round.c $(RFLAGS) -o $(OBJDIR)/f-round.o

$(OBJDIR)/f-series.o:      $R/f-series.c
	$(CC) $R/f-series.c $(RFLAGS) -o $(OBJDIR)/f-series.o

$(OBJDIR)/f-stubs.o:       $R/f-stubs.c
	$(CC) $R/f-stubs.c $(RFLAGS) -o $(OBJDIR)/f-stubs.o

$(OBJDIR)/l-scan.o:        $R/l-scan.c
	$(CC) $R/l-scan.c $(RFLAGS) -o $(OBJDIR)/l-scan.o

$(OBJDIR)/l-types.o:       $R/l-types.c
	$(CC) $R/l-types.c $(RFLAGS) -o $(OBJDIR)/l-types.o

$(OBJDIR)/m-gc.o:          $R/m-gc.c
	$(CC) $R/m-gc.c $(RFLAGS) -o $(OBJDIR)/m-gc.o

$(OBJDIR)/m-pools.o:       $R/m-pools.c
	$(CC) $R/m-pools.c $(RFLAGS) -o $(OBJDIR)/m-pools.o

$(OBJDIR)/m-series.o:      $R/m-series.c
	$(CC) $R/m-series.c $(RFLAGS) -o $(OBJDIR)/m-series.o

$(OBJDIR)/n-control.o:     $R/n-control.c
	$(CC) $R/n-control.c $(RFLAGS) -o $(OBJDIR)/n-control.o

$(OBJDIR)/n-data.o:        $R/n-data.c
	$(CC) $R/n-data.c $(RFLAGS) -o $(OBJDIR)/n-data.o

$(OBJDIR)/n-io.o:          $R/n-io.c
	$(CC) $R/n-io.c $(RFLAGS) -o $(OBJDIR)/n-io.o

$(OBJDIR)/n-loop.o:        $R/n-loop.c
	$(CC) $R/n-loop.c $(RFLAGS) -o $(OBJDIR)/n-loop.o

$(OBJDIR)/n-math.o:        $R/n-math.c
	$(CC) $R/n-math.c $(RFLAGS) -o $(OBJDIR)/n-math.o

$(OBJDIR)/n-sets.o:        $R/n-sets.c
	$(CC) $R/n-sets.c $(RFLAGS) -o $(OBJDIR)/n-sets.o

$(OBJDIR)/n-strings.o:     $R/n-strings.c
	$(CC) $R/n-strings.c $(RFLAGS) -o $(OBJDIR)/n-strings.o

$(OBJDIR)/n-system.o:      $R/n-system.c
	$(CC) $R/n-system.c $(RFLAGS) -o $(OBJDIR)/n-system.o

$(OBJDIR)/p-clipboard.o:   $R/p-clipboard.c
	$(CC) $R/p-clipboard.c $(RFLAGS) -o $(OBJDIR)/p-clipboard.o

$(OBJDIR)/p-console.o:     $R/p-console.c
	$(CC) $R/p-console.c $(RFLAGS) -o $(OBJDIR)/p-console.o

$(OBJDIR)/p-dir.o:         $R/p-dir.c
	$(CC) $R/p-dir.c $(RFLAGS) -o $(OBJDIR)/p-dir.o

$(OBJDIR)/p-dns.o:         $R/p-dns.c
	$(CC) $R/p-dns.c $(RFLAGS) -o $(OBJDIR)/p-dns.o

$(OBJDIR)/p-event.o:       $R/p-event.c
	$(CC) $R/p-event.c $(RFLAGS) -o $(OBJDIR)/p-event.o

$(OBJDIR)/p-file.o:        $R/p-file.c
	$(CC) $R/p-file.c $(RFLAGS) -o $(OBJDIR)/p-file.o

$(OBJDIR)/p-net.o:         $R/p-net.c
	$(CC) $R/p-net.c $(RFLAGS) -o $(OBJDIR)/p-net.o

$(OBJDIR)/s-cases.o:       $R/s-cases.c
	$(CC) $R/s-cases.c $(RFLAGS) -o $(OBJDIR)/s-cases.o

$(OBJDIR)/s-crc.o:         $R/s-crc.c
	$(CC) $R/s-crc.c $(RFLAGS) -o $(OBJDIR)/s-crc.o

$(OBJDIR)/s-file.o:        $R/s-file.c
	$(CC) $R/s-file.c $(RFLAGS) -o $(OBJDIR)/s-file.o

$(OBJDIR)/s-find.o:        $R/s-find.c
	$(CC) $R/s-find.c $(RFLAGS) -o $(OBJDIR)/s-find.o

$(OBJDIR)/s-make.o:        $R/s-make.c
	$(CC) $R/s-make.c $(RFLAGS) -o $(OBJDIR)/s-make.o

$(OBJDIR)/s-mold.o:        $R/s-mold.c
	$(CC) $R/s-mold.c $(RFLAGS) -o $(OBJDIR)/s-mold.o

$(OBJDIR)/s-ops.o:         $R/s-ops.c
	$(CC) $R/s-ops.c $(RFLAGS) -o $(OBJDIR)/s-ops.o

$(OBJDIR)/s-trim.o:        $R/s-trim.c
	$(CC) $R/s-trim.c $(RFLAGS) -o $(OBJDIR)/s-trim.o

$(OBJDIR)/s-unicode.o:     $R/s-unicode.c
	$(CC) $R/s-unicode.c $(RFLAGS) -o $(OBJDIR)/s-unicode.o

$(OBJDIR)/t-bitset.o:      $R/t-bitset.c
	$(CC) $R/t-bitset.c $(RFLAGS) -o $(OBJDIR)/t-bitset.o

$(OBJDIR)/t-block.o:       $R/t-block.c
	$(CC) $R/t-block.c $(RFLAGS) -o $(OBJDIR)/t-block.o

$(OBJDIR)/t-char.o:        $R/t-char.c
	$(CC) $R/t-char.c $(RFLAGS) -o $(OBJDIR)/t-char.o

$(OBJDIR)/t-datatype.o:    $R/t-datatype.c
	$(CC) $R/t-datatype.c $(RFLAGS) -o $(OBJDIR)/t-datatype.o

$(OBJDIR)/t-date.o:        $R/t-date.c
	$(CC) $R/t-date.c $(RFLAGS) -o $(OBJDIR)/t-date.o

$(OBJDIR)/t-decimal.o:     $R/t-decimal.c
	$(CC) $R/t-decimal.c $(RFLAGS) -o $(OBJDIR)/t-decimal.o

$(OBJDIR)/t-event.o:       $R/t-event.c
	$(CC) $R/t-event.c $(RFLAGS) -o $(OBJDIR)/t-event.o

$(OBJDIR)/t-function.o:    $R/t-function.c
	$(CC) $R/t-function.c $(RFLAGS) -o $(OBJDIR)/t-function.o

$(OBJDIR)/t-gob.o:         $R/t-gob.c
	$(CC) $R/t-gob.c $(RFLAGS) -o $(OBJDIR)/t-gob.o

$(OBJDIR)/t-image.o:       $R/t-image.c
	$(CC) $R/t-image.c $(RFLAGS) -o $(OBJDIR)/t-image.o

$(OBJDIR)/t-integer.o:     $R/t-integer.c
	$(CC) $R/t-integer.c $(RFLAGS) -o $(OBJDIR)/t-integer.o

$(OBJDIR)/t-logic.o:       $R/t-logic.c
	$(CC) $R/t-logic.c $(RFLAGS) -o $(OBJDIR)/t-logic.o

$(OBJDIR)/t-map.o:         $R/t-map.c
	$(CC) $R/t-map.c $(RFLAGS) -o $(OBJDIR)/t-map.o

$(OBJDIR)/t-money.o:       $R/t-money.c
	$(CC) $R/t-money.c $(RFLAGS) -o $(OBJDIR)/t-money.o

$(OBJDIR)/t-none.o:        $R/t-none.c
	$(CC) $R/t-none.c $(RFLAGS) -o $(OBJDIR)/t-none.o

$(OBJDIR)/t-object.o:      $R/t-object.c
	$(CC) $R/t-object.c $(RFLAGS) -o $(OBJDIR)/t-object.o

$(OBJDIR)/t-pair.o:        $R/t-pair.c
	$(CC) $R/t-pair.c $(RFLAGS) -o $(OBJDIR)/t-pair.o

$(OBJDIR)/t-port.o:        $R/t-port.c
	$(CC) $R/t-port.c $(RFLAGS) -o $(OBJDIR)/t-port.o

$(OBJDIR)/t-string.o:      $R/t-string.c
	$(CC) $R/t-string.c $(RFLAGS) -o $(OBJDIR)/t-string.o

$(OBJDIR)/t-time.o:        $R/t-time.c
	$(CC) $R/t-time.c $(RFLAGS) -o $(OBJDIR)/t-time.o

$(OBJDIR)/t-tuple.o:       $R/t-tuple.c
	$(CC) $R/t-tuple.c $(RFLAGS) -o $(OBJDIR)/t-tuple.o

$(OBJDIR)/t-typeset.o:     $R/t-typeset.c
	$(CC) $R/t-typeset.c $(RFLAGS) -o $(OBJDIR)/t-typeset.o

$(OBJDIR)/t-utype.o:       $R/t-utype.c
	$(CC) $R/t-utype.c $(RFLAGS) -o $(OBJDIR)/t-utype.o

$(OBJDIR)/t-vector.o:      $R/t-vector.c
	$(CC) $R/t-vector.c $(RFLAGS) -o $(OBJDIR)/t-vector.o

$(OBJDIR)/t-word.o:        $R/t-word.c
	$(CC) $R/t-word.c $(RFLAGS) -o $(OBJDIR)/t-word.o

$(OBJDIR)/u-bmp.o:         $R/u-bmp.c
	$(CC) $R/u-bmp.c $(RFLAGS) -o $(OBJDIR)/u-bmp.o

$(OBJDIR)/u-compress.o:    $R/u-compress.c
	$(CC) $R/u-compress.c $(RFLAGS) -o $(OBJDIR)/u-compress.o

$(OBJDIR)/u-dialect.o:     $R/u-dialect.c
	$(CC) $R/u-dialect.c $(RFLAGS) -o $(OBJDIR)/u-dialect.o

$(OBJDIR)/u-gif.o:         $R/u-gif.c
	$(CC) $R/u-gif.c $(RFLAGS) -o $(OBJDIR)/u-gif.o

$(OBJDIR)/u-jpg.o:         $R/u-jpg.c
	$(CC) $R/u-jpg.c $(RFLAGS) -o $(OBJDIR)/u-jpg.o

$(OBJDIR)/u-md5.o:         $R/u-md5.c
	$(CC) $R/u-md5.c $(RFLAGS) -o $(OBJDIR)/u-md5.o

$(OBJDIR)/u-parse.o:       $R/u-parse.c
	$(CC) $R/u-parse.c $(RFLAGS) -o $(OBJDIR)/u-parse.o

$(OBJDIR)/u-png.o:         $R/u-png.c
	$(CC) $R/u-png.c $(RFLAGS) -o $(OBJDIR)/u-png.o

$(OBJDIR)/u-sha1.o:        $R/u-sha1.c
	$(CC) $R/u-sha1.c $(RFLAGS) -o $(OBJDIR)/u-sha1.o

$(OBJDIR)/u-zlib.o:        $R/u-zlib.c
	$(CC) $R/u-zlib.c $(RFLAGS) -o $(OBJDIR)/u-zlib.o

#--- Host Program:

$(OBJDIR)/host-main.o:     $S/os/host-main.c
	$(CC) $S/os/host-main.c $(HFLAGS) -o $(OBJDIR)/host-main.o

$(OBJDIR)/host-core.o:     $S/os/host-core.c
	$(CC) $S/os/host-core.c $(HFLAGS) -o $(OBJDIR)/host-core.o

$(OBJDIR)/host-licensing.o:     $S/os/win32/host-licensing.c
	$(CC) $S/os/win32/host-licensing.c $(HFLAGS) -o $(OBJDIR)/host-licensing.o

$(OBJDIR)/host-args.o:     $S/os/host-args.c
	$(CC) $S/os/host-args.c $(HFLAGS) -o $(OBJDIR)/host-args.o

$(OBJDIR)/host-device.o:   $S/os/host-device.c
	$(CC) $S/os/host-device.c $(HFLAGS) -o $(OBJDIR)/host-device.o

$(OBJDIR)/host-stdio.o:    $S/os/host-stdio.c
	$(CC) $S/os/host-stdio.c $(HFLAGS) -o $(OBJDIR)/host-stdio.o

$(OBJDIR)/dev-net.o:       $S/os/dev-net.c
	$(CC) $S/os/dev-net.c $(HFLAGS) -o $(OBJDIR)/dev-net.o

$(OBJDIR)/dev-dns.o:       $S/os/dev-dns.c
	$(CC) $S/os/dev-dns.c $(HFLAGS) -o $(OBJDIR)/dev-dns.o

$(OBJDIR)/host-view.o: $S/os/host-view.c
	$(CC) $S/os/host-view.c $(HFLAGS) -o $(OBJDIR)/host-view.o

$(OBJDIR)/host-draw.o: $S/os/host-draw.c
	$(CC) $S/os/host-draw.c $(HFLAGS) -o $(OBJDIR)/host-draw.o

$(OBJDIR)/host-lib.o:      $S/os/win32/host-lib.c
	$(CC) $S/os/win32/host-lib.c $(HFLAGS) -o $(OBJDIR)/host-lib.o

$(OBJDIR)/dev-stdio.o:     $S/os/win32/dev-stdio.c
	$(CC) $S/os/win32/dev-stdio.c $(HFLAGS) -o $(OBJDIR)/dev-stdio.o

$(OBJDIR)/dev-file.o:      $S/os/win32/dev-file.c
	$(CC) $S/os/win32/dev-file.c $(HFLAGS) -o $(OBJDIR)/dev-file.o

$(OBJDIR)/dev-event.o:     $S/os/win32/dev-event.c
	$(CC) $S/os/win32/dev-event.c $(HFLAGS) -o $(OBJDIR)/dev-event.o

$(OBJDIR)/dev-clipboard.o: $S/os/win32/dev-clipboard.c
	$(CC) $S/os/win32/dev-clipboard.c $(HFLAGS) -o $(OBJDIR)/dev-clipboard.o

$(OBJDIR)/host-draw-api.o: $S/os/host-draw-api-agg.cpp
	$(CXX) $S/os/host-draw-api-agg.cpp $(HFLAGS) -o $(OBJDIR)/host-draw-api.o

$(OBJDIR)/host-text-api.o: $S/os/host-text-api-agg.cpp
	$(CXX) $S/os/host-text-api-agg.cpp $(HFLAGS) -o $(OBJDIR)/host-text-api.o

$(OBJDIR)/host-compositor.o: $S/os/win32/host-compositor-gdi.c
	$(CC) $S/os/win32/host-compositor-gdi.c $(HFLAGS) -o $(OBJDIR)/host-compositor.o

$(OBJDIR)/host-text.o: $S/os/host-text.c
	$(CC) $S/os/host-text.c $(HFLAGS) -o $(OBJDIR)/host-text.o

$(OBJDIR)/host-graphics.o: $S/os/win32/host-graphics.c
	$(CC) $S/os/win32/host-graphics.c $(HFLAGS) -o $(OBJDIR)/host-graphics.o

$(OBJDIR)/host-event.o:    $S/os/win32/host-event.c
	$(CC) $S/os/win32/host-event.c $(HFLAGS) -o $(OBJDIR)/host-event.o

$(OBJDIR)/host-window.o:   $S/os/win32/host-window.c
	$(CC) $S/os/win32/host-window.c $(HFLAGS) -o $(OBJDIR)/host-window.o

$(OBJDIR)/lodepng.o:    $S/codecs/png/lodepng.c
	$(CC) $S/codecs/png/lodepng.c $(HFLAGS) -o $(OBJDIR)/lodepng.o

$(OBJDIR)/rc4.o:    $S/codecs/rc4/rc4.c $(INCS)
	$(CC) $S/codecs/rc4/rc4.c $(HFLAGS) -o $(OBJDIR)/rc4.o

$(OBJDIR)/aes.o:    $S/codecs/aes/aes.c $(INCS)
	$(CC) $S/codecs/aes/aes.c $(HFLAGS) -o $(OBJDIR)/aes.o

$(OBJDIR)/bigint.o:    $S/codecs/bigint/bigint.c
	$(CC) $S/codecs/bigint/bigint.c $(HFLAGS) -o $(OBJDIR)/bigint.o

$(OBJDIR)/rsa.o:    $S/codecs/rsa/rsa.c
	$(CC) $S/codecs/rsa/rsa.c $(HFLAGS) -o $(OBJDIR)/rsa.o

$(OBJDIR)/dh.o:    $S/codecs/dh/dh.c
	$(CC) $S/codecs/dh/dh.c $(HFLAGS) -o $(OBJDIR)/dh.o

#--- AGG Library:

$(OBJDIR)/agg_arc.o:    $S/agg/agg_arc.cpp
	$(CXX) $S/agg/agg_arc.cpp $(HFLAGS) -o $(OBJDIR)/agg_arc.o

$(OBJDIR)/agg_arrowhead.o: $S/agg/agg_arrowhead.cpp
	$(CXX) $S/agg/agg_arrowhead.cpp $(HFLAGS) -o $(OBJDIR)/agg_arrowhead.o

$(OBJDIR)/agg_bezier_arc.o:$S/agg/agg_bezier_arc.cpp
	$(CXX) $S/agg/agg_bezier_arc.cpp $(HFLAGS) -o $(OBJDIR)/agg_bezier_arc.o

$(OBJDIR)/agg_bspline.o:   $S/agg/agg_bspline.cpp
	$(CXX) $S/agg/agg_bspline.cpp $(HFLAGS) -o $(OBJDIR)/agg_bspline.o

$(OBJDIR)/agg_curves.o:    $S/agg/agg_curves.cpp
	$(CXX) $S/agg/agg_curves.cpp $(HFLAGS) -o $(OBJDIR)/agg_curves.o

$(OBJDIR)/agg_image_filters.o:$S/agg/agg_image_filters.cpp
	$(CXX) $S/agg/agg_image_filters.cpp $(HFLAGS) -o $(OBJDIR)/agg_image_filters.o

$(OBJDIR)/agg_line_aa_basics.o:$S/agg/agg_line_aa_basics.cpp
	$(CXX) $S/agg/agg_line_aa_basics.cpp $(HFLAGS) -o $(OBJDIR)/agg_line_aa_basics.o

$(OBJDIR)/agg_path_storage.o:$S/agg/agg_path_storage.cpp
	$(CXX) $S/agg/agg_path_storage.cpp $(HFLAGS) -o $(OBJDIR)/agg_path_storage.o

$(OBJDIR)/agg_rasterizer_scanline_aa.o:$S/agg/agg_rasterizer_scanline_aa.cpp
	$(CXX) $S/agg/agg_rasterizer_scanline_aa.cpp $(HFLAGS) -o $(OBJDIR)/agg_rasterizer_scanline_aa.o

$(OBJDIR)/agg_rounded_rect.o:$S/agg/agg_rounded_rect.cpp
	$(CXX) $S/agg/agg_rounded_rect.cpp $(HFLAGS) -o $(OBJDIR)/agg_rounded_rect.o

$(OBJDIR)/agg_sqrt_tables.o:$S/agg/agg_sqrt_tables.cpp
	$(CXX) $S/agg/agg_sqrt_tables.cpp $(HFLAGS) -o $(OBJDIR)/agg_sqrt_tables.o

$(OBJDIR)/agg_trans_affine.o:$S/agg/agg_trans_affine.cpp
	$(CXX) $S/agg/agg_trans_affine.cpp $(HFLAGS) -o $(OBJDIR)/agg_trans_affine.o

$(OBJDIR)/agg_trans_single_path.o:$S/agg/agg_trans_single_path.cpp
	$(CXX) $S/agg/agg_trans_single_path.cpp $(HFLAGS) -o $(OBJDIR)/agg_trans_single_path.o

$(OBJDIR)/agg_vcgen_bspline.o:$S/agg/agg_vcgen_bspline.cpp
	$(CXX) $S/agg/agg_vcgen_bspline.cpp $(HFLAGS) -o $(OBJDIR)/agg_vcgen_bspline.o

$(OBJDIR)/agg_vcgen_contour.o:$S/agg/agg_vcgen_contour.cpp
	$(CXX) $S/agg/agg_vcgen_contour.cpp $(HFLAGS) -o $(OBJDIR)/agg_vcgen_contour.o

$(OBJDIR)/agg_vcgen_dash.o:$S/agg/agg_vcgen_dash.cpp
	$(CXX) $S/agg/agg_vcgen_dash.cpp $(HFLAGS) -o $(OBJDIR)/agg_vcgen_dash.o

$(OBJDIR)/agg_vcgen_markers_term.o:$S/agg/agg_vcgen_markers_term.cpp
	$(CXX) $S/agg/agg_vcgen_markers_term.cpp $(HFLAGS) -o $(OBJDIR)/agg_vcgen_markers_term.o

$(OBJDIR)/agg_vcgen_smooth_poly1.o:$S/agg/agg_vcgen_smooth_poly1.cpp
	$(CXX) $S/agg/agg_vcgen_smooth_poly1.cpp $(HFLAGS) -o $(OBJDIR)/agg_vcgen_smooth_poly1.o

$(OBJDIR)/agg_vcgen_stroke.o:$S/agg/agg_vcgen_stroke.cpp
	$(CXX) $S/agg/agg_vcgen_stroke.cpp $(HFLAGS) -o $(OBJDIR)/agg_vcgen_stroke.o

$(OBJDIR)/agg_vpgen_segmentator.o:$S/agg/agg_vpgen_segmentator.cpp
	$(CXX) $S/agg/agg_vpgen_segmentator.cpp $(HFLAGS) -o $(OBJDIR)/agg_vpgen_segmentator.o

$(OBJDIR)/agg_graphics.o:  $S/agg/agg_graphics.cpp
	$(CXX) $S/agg/agg_graphics.cpp $(HFLAGS) -o $(OBJDIR)/agg_graphics.o

$(OBJDIR)/agg_font_win32_tt.o:$S/agg/agg_font_win32_tt.cpp
	$(CXX) $S/agg/agg_font_win32_tt.cpp $(HFLAGS) -o $(OBJDIR)/agg_font_win32_tt.o

$(OBJDIR)/agg_truetype_text.o:$S/agg/agg_truetype_text.cpp
	$(CXX) $S/agg/agg_truetype_text.cpp $(HFLAGS) -o $(OBJDIR)/agg_truetype_text.o

$(OBJDIR)/rich_text.o:     $S/agg/rich_text.cpp
	$(CXX) $S/agg/rich_text.cpp $(HFLAGS) -o $(OBJDIR)/rich_text.o

