#
# .travis.yaml contains YAML-formatted (http://www.yaml.org/) build
# instructions for continuous integration via Travis CI
# (http://docs.travis-ci.com/).
#

notifications:
    email: false

language: c

compiler:
    - gcc
    - g++

env:
    matrix:
        # Linux x86, release
        - OS_ID=0.4.4 REL=1
        # Linux x64, debug
        - OS_ID=0.4.40
        # Linux x64, release
        - OS_ID=0.4.40 REL=1

        # Windows x86, release
        - OS_ID=0.3.1 REL=1 TOOLS=i686-w64-mingw32-
        # Windows x64, release
        - OS_ID=0.3.40 REL=1 TOOLS=x86_64-w64-mingw32-

# Force new container-based infrastructure.
# Ref: http://docs.travis-ci.com/user/migrating-from-legacy/
sudo: false

addons:
    apt:
        packages:
            # For building 32b binaries on a 64b host (not necessary when we
            # build for 64b):
            - gcc-multilib
            - g++-multilib

            # For running the 32b bootstrap rebol ("r3-make") on a 64b host:
            - libc6:i386

            # For cross-compiling to Windows.
            - binutils-mingw-w64-i686
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-i686
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-i686
            - g++-mingw-w64-x86-64
            - mingw-w64


install:
    # Fetch a Rebol bootstrap binary, which is needed for building Rebol.
    - wget http://www.rebol.com/r3/downloads/r3-a111-4-2.tar.gz
    - tar xvzf r3-a111-4-2.tar.gz
    - cp r3 make/r3-make

script:
    - cd make/
    # If REL is defined and not empty, we do a release build by compiling with
    # NDEBUG defined. (`${parameter+alt_value}` is a Bash-ism documented as:
    # "if parameter set, use alt_value, else use null string.")
    - export CC="${TOOLS}${CC}${REL+ -DNDEBUG}"
    # We have to set REBOL_TOOL explicitly to circumvent the automatic r3-make
    # filename inference, as we always use a Linux r3-make, even when
    # cross-compiling to Windows.
    - make -f makefile.boot REBOL_TOOL=r3-make OS_ID="${OS_ID}" CC="${CC}"
    # A minimal sanity check that the built R3 does _something_. Eventually, we
    # should run the full test suite.
    - if [ "${OS_ID}" = "0.4.40" ]; then ./r3 --do 'print {OK}' | grep OK; fi
